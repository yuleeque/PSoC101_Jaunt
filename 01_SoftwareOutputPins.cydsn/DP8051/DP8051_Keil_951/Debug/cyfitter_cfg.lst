C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(DEB
                    -UG) WL(2) PR(.\DP8051\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_c
                    -fg.obj)

line level    source

   1          
   2          /*******************************************************************************
   3          * File Name: cyfitter_cfg.c
   4          * 
   5          * PSoC Creator  4.4
   6          *
   7          * Description:
   8          * This file contains device initialization code.
   9          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10          * This file is automatically generated by PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright (c) 2007-2020 Cypress Semiconductor.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          ********************************************************************************/
  18          
  19          #include <string.h>
  20          #include "cytypes.h"
  21          #include "cydevice_trm.h"
  22          #include "cyfitter.h"
  23          #include "CyLib.h"
  24          #include "cyfitter_cfg.h"
  25          #include "cyapicallbacks.h"
  26          
  27          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  28          
  29          
  30          #if defined(__C51__) || defined(__CX51__)
  31                  #define CYPACKED
  32                  #define CYPACKED_ATTR
  33                  #define CYALIGNED
  34                  
  35              #define CY_CFG_UNUSED
  36                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  37          
  38          
  39          
  40                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  41                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  42                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  43          #else
                      #error Unsupported toolchain
              #endif
  46          
  47          
  48          
  49          
  50          /* Clock startup error codes                                                   */
  51          #define CYCLOCKSTART_NO_ERROR    0u
  52          #define CYCLOCKSTART_XTAL_ERROR  1u
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 2   

  53          #define CYCLOCKSTART_32KHZ_ERROR 2u
  54          #define CYCLOCKSTART_PLL_ERROR   3u
  55          #define CYCLOCKSTART_FLL_ERROR   4u
  56          #define CYCLOCKSTART_WCO_ERROR   5u
  57          
  58          
  59          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  60          /*******************************************************************************
  61          * Function Name: CyClockStartupError
  62          ********************************************************************************
  63          * Summary:
  64          *  If an error is encountered during clock configuration (crystal startup error,
  65          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  66          *  the customer, this function will stop in an infinite loop.
  67          *
  68          * Parameters:
  69          *   void
  70          *
  71          * Return:
  72          *   void
  73          *
  74          *******************************************************************************/
  75          CY_CFG_UNUSED
  76          static void CyClockStartupError(uint8 errorCode);
  77          CY_CFG_UNUSED
  78          static void CyClockStartupError(uint8 errorCode)
  79          {
  80   1          /* To remove the compiler warning if errorCode not used.                */
  81   1          errorCode = errorCode;
  82   1      
  83   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  84   1          /* we will end up here to allow the customer to implement something to  */
  85   1          /* deal with the clock condition.                                       */
  86   1      
  87   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                  CY_CFG_Clock_Startup_ErrorCallback();
              #else
  90   1          /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  91   1          /* `#START CyClockStartupError` */
  92   1      
  93   1      
  94   1      
  95   1          /* `#END` */
  96   1      
  97   1          while(1) {}
  98   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
  99   1      }
 100          #endif
 101          
 102          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 103          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x00080000u)
 104          
 105          /* IOPINS0_6 Address: CYREG_PRT6_DR Size (bytes): 10 */
 106          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x00080008u)
 107          
 108          
 109          /*******************************************************************************
 110          * Function Name: ClockSetup
 111          ********************************************************************************
 112          *
 113          * Summary:
 114          *  Performs the initialization of all of the clocks in the device based on the
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 3   

 115          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 116          *  clocks and setting the necessary dividers to produce the desired frequency. 
 117          *
 118          * Parameters:
 119          *  void
 120          *
 121          * Return:
 122          *  void
 123          *
 124          *******************************************************************************/
 125          static void ClockSetup(void);
 126          static void ClockSetup(void)
 127          {
 128   1              uint32 timeout;
 129   1              uint8 pllLock;
 130   1      
 131   1      
 132   1              /* Configure ILO based on settings from Clock DWR */
 133   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 134   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 135   1      
 136   1              /* Configure IMO based on settings from Clock DWR */
 137   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 138   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 139   1      
 140   1              /* Configure PLL based on settings from Clock DWR */
 141   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 142   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 143   1              /* Wait up to 250us for the PLL to lock */
 144   1              pllLock = 0u;
 145   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 146   1              { 
 147   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 148   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 149   2              }
 150   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 151   1              if (timeout == 0u)
 152   1              {
 153   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 154   2              }
 155   1      
 156   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 157   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 158   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 159   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 160   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 163   1      }
 164          
 165          
 166          /* Analog API Functions */
 167          
 168          
 169          /*******************************************************************************
 170          * Function Name: AnalogSetDefault
 171          ********************************************************************************
 172          *
 173          * Summary:
 174          *  Sets up the analog portions of the chip to default values based on chip
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 4   

 175          *  configuration options from the project.
 176          *
 177          * Parameters:
 178          *  void
 179          *
 180          * Return:
 181          *  void
 182          *
 183          *******************************************************************************/
 184          static void AnalogSetDefault(void);
 185          static void AnalogSetDefault(void)
 186          {
 187   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 188   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 189   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 190   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 191   1      }
 192          
 193          
 194          /*******************************************************************************
 195          * Function Name: SetAnalogRoutingPumps
 196          ********************************************************************************
 197          *
 198          * Summary:
 199          * Enables or disables the analog pumps feeding analog routing switches.
 200          * Intended to be called at startup, based on the Vdda system configuration;
 201          * may be called during operation when the user informs us that the Vdda voltage
 202          * crossed the pump threshold.
 203          *
 204          * Parameters:
 205          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 206          *
 207          * Return:
 208          *  void
 209          *
 210          *******************************************************************************/
 211          void SetAnalogRoutingPumps(uint8 enabled)
 212          {
 213   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 214   1              if (enabled != 0u)
 215   1              {
 216   2                      regValue |= 0x00u;
 217   2              }
 218   1              else
 219   1              {
 220   2                      regValue &= (uint8)~0x00u;
 221   2              }
 222   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 223   1      }
 224          
 225          
 226          
 227          
 228          /*******************************************************************************
 229          * Function Name: cyfitter_cfg
 230          ********************************************************************************
 231          * Summary:
 232          *  This function is called by the start-up code for the selected device. It
 233          *  performs all of the necessary device configuration based on the design
 234          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 235          *  as Clocks and Pins as well as any component configuration that is necessary.
 236          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 5   

 237          * Parameters:
 238          *   void
 239          *
 240          * Return:
 241          *   void
 242          *
 243          *******************************************************************************/
 244          
 245          void cyfitter_cfg(void)
 246          {
 247   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 248   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 249   1      
 250   1              {
 251   2      
 252   2                      CYPACKED typedef struct {
 253   2                              void CYFAR *address;
 254   2                              uint16 size;
 255   2                      } CYPACKED_ATTR cfg_memset_t;
 256   2      
 257   2                      static const cfg_memset_t CYCODE cfg_memset_list[] = {
 258   2                              /* address, size */
 259   2                              {(void CYFAR *)(CYREG_PRT0_DR), 16u},
 260   2                              {(void CYFAR *)(CYREG_PRT2_DR), 64u},
 261   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 262   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 263   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 264   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 265   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 266   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 267   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 268   2                      };
 269   2      
 270   2                      uint8 CYDATA i;
 271   2      
 272   2                      /* Zero out critical memory blocks before beginning configuration */
 273   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 274   2                      {
 275   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 276   3                              CYMEMZERO(ms->address, ms->size);
 277   3                      }
 278   2      
 279   2                      /* Enable digital routing */
 280   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 281   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 282   2              }
 283   1      
 284   1      
 285   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 286   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (const void CYFAR *)(BS_IOPINS0_1_VAL), 8u);
 287   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DR), (const void CYFAR *)(BS_IOPINS0_6_VAL), 10u);
 288   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 289   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 290   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 291   1              {
 292   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 293   2              }
 294   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 6   

 295   1      
 296   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 297   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0x31u : 0x00u));
 298   1              /* Setup clocks based on selections from Clock DWR */
 299   1              ClockSetup();
 300   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 301   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 302   1      
 303   1              /* Perform basic analog initialization to defaults */
 304   1              AnalogSetDefault();
 305   1      
 306   1              /* Configure alternate active mode */
 307   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 308   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 309   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 78
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 81
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 97
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 133
0000 904300            MOV     DPTR,#04300H
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
0006 904000            MOV     DPTR,#04000H
0009 7408              MOV     A,#08H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
000C 904200            MOV     DPTR,#04200H
000F 7403              MOV     A,#03H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0012 7B0C              MOV     R3,#0CH
0014 7A01              MOV     R2,#01H
0016 7908              MOV     R1,#08H
0018 120000      E     LCALL   _cyread8
001B 9046A1            MOV     DPTR,#046A1H
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0020 7B00              MOV     R3,#00H
0022 7A42              MOV     R2,#042H
0024 7922              MOV     R1,#022H
0026 7D08              MOV     R5,#08H
0028 7C00              MOV     R4,#00H
002A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 142
002D 7B00              MOV     R3,#00H
002F 7A42              MOV     R2,#042H
0031 7920              MOV     R1,#020H
0033 7D51              MOV     R5,#051H
0035 7C12              MOV     R4,#012H
0037 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 144
003A 900000      R     MOV     DPTR,#pllLock
003D E4                CLR     A
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 8   

003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
003F 7F19              MOV     R7,#019H
0041 7E00              MOV     R6,#00H
0043 7D00              MOV     R5,#00H
0045 7C00              MOV     R4,#00H
0047 900000      R     MOV     DPTR,#timeout
004A 120000      E     LCALL   ?C?LSTXDATA
004D         ?C0004:
004D 900000      R     MOV     DPTR,#timeout
0050 120000      E     LCALL   ?C?LLDXDATA
0053 D3                SETB    C
0054 EF                MOV     A,R7
0055 9400              SUBB    A,#00H
0057 EE                MOV     A,R6
0058 9400              SUBB    A,#00H
005A 404E              JC      ?C0005
005C 900000      R     MOV     DPTR,#pllLock
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 6403              XRL     A,#03H
0064 6044              JZ      ?C0005
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
0066 904225            MOV     DPTR,#04225H
0069 E0                MOVX    A,@DPTR
006A FF                MOV     R7,A
006B EF                MOV     A,R7
006C 5401              ANL     A,#01H
006E FF                MOV     R7,A
006F 7E00              MOV     R6,#00H
0071 900000      R     MOV     DPTR,#pllLock
0074 E0                MOVX    A,@DPTR
0075 FE                MOV     R6,A
0076 EE                MOV     A,R6
0077 25E0              ADD     A,ACC
0079 FE                MOV     R6,A
007A EE                MOV     A,R6
007B 4F                ORL     A,R7
007C FF                MOV     R7,A
007D EF                MOV     A,R7
007E 5403              ANL     A,#03H
0080 FF                MOV     R7,A
0081 900000      R     MOV     DPTR,#pllLock
0084 EF                MOV     A,R7
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0086 7FE0              MOV     R7,#0E0H
0088 7E01              MOV     R6,#01H
008A 7D00              MOV     R5,#00H
008C 7C00              MOV     R4,#00H
008E 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 149
0091 900000      R     MOV     DPTR,#timeout
0094 120000      E     LCALL   ?C?LLDXDATA
0097 7BFF              MOV     R3,#0FFH
0099 7AFF              MOV     R2,#0FFH
009B 79FF              MOV     R1,#0FFH
009D 78FF              MOV     R0,#0FFH
009F 120000      E     LCALL   ?C?LADD
00A2 900000      R     MOV     DPTR,#timeout
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 9   

00A5 120000      E     LCALL   ?C?LSTXDATA
00A8 80A3              SJMP    ?C0004
00AA         ?C0005:
                                           ; SOURCE LINE # 151
00AA 900000      R     MOV     DPTR,#timeout
00AD 120000      E     LCALL   ?C?LLDXDATA
00B0 EF                MOV     A,R7
00B1 4E                ORL     A,R6
00B2 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
00B4 7F03              MOV     R7,#03H
00B6 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 154
00B9         ?C0007:
                                           ; SOURCE LINE # 157
00B9 7B00              MOV     R3,#00H
00BB 7A40              MOV     R2,#040H
00BD 7904              MOV     R1,#04H
00BF 7D00              MOV     R5,#00H
00C1 7C01              MOV     R4,#01H
00C3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 158
00C6 904004            MOV     DPTR,#04004H
00C9 7407              MOV     A,#07H
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
00CC 904006            MOV     DPTR,#04006H
00CF E4                CLR     A
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
00D1 904008            MOV     DPTR,#04008H
00D4 7448              MOV     A,#048H
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
00D7 904004            MOV     DPTR,#04004H
00DA E4                CLR     A
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
00DC 904001            MOV     DPTR,#04001H
00DF 7402              MOV     A,#02H
00E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
00E2 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 187
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 10  

0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 211
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 11  

0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0035         ?C0011:
                                           ; SOURCE LINE # 222
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 248
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 273
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9409              SUBB    A,#09H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 274
                                           ; SOURCE LINE # 275
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 276
0038 AE00        R     MOV     R6,ms
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 12  

003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 277
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 280
005A 7B01              MOV     R3,#01H
005C 7A50              MOV     R2,#050H
005E 7903              MOV     R1,#03H
0060 120000      E     LCALL   _cyread8
0063 EF                MOV     A,R7
0064 4402              ORL     A,#02H
0066 FD                MOV     R5,A
0067 7B01              MOV     R3,#01H
0069 7A50              MOV     R2,#050H
006B 7903              MOV     R1,#03H
006D 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 281
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7913              MOV     R1,#013H
0076 120000      E     LCALL   _cyread8
0079 EF                MOV     A,R7
007A 4402              ORL     A,#02H
007C FD                MOV     R5,A
007D 7B01              MOV     R3,#01H
007F 7A50              MOV     R2,#050H
0081 7913              MOV     R1,#013H
0083 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 286
0086 7B08              MOV     R3,#08H
0088 7A00              MOV     R2,#00H
008A 7900              MOV     R1,#00H
008C C003              PUSH    AR3
008E C002              PUSH    AR2
0090 C001              PUSH    AR1
0092 7B00              MOV     R3,#00H
0094 7A51              MOV     R2,#051H
0096 7912              MOV     R1,#012H
0098 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
009B 120000      E     LCALL   ?C?PSTXDATA
009E D001              POP     AR1
00A0 D002              POP     AR2
00A2 D003              POP     AR3
00A4 7F08              MOV     R7,#08H
00A6 7E00              MOV     R6,#00H
00A8 120000      E     LCALL   _cyconfigcpy
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 13  

                                           ; SOURCE LINE # 287
00AB 7B08              MOV     R3,#08H
00AD 7A00              MOV     R2,#00H
00AF 7908              MOV     R1,#08H
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7B00              MOV     R3,#00H
00B9 7A51              MOV     R2,#051H
00BB 7960              MOV     R1,#060H
00BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 7F0A              MOV     R7,#0AH
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 289
00D0 904322            MOV     DPTR,#04322H
00D3 E0                MOVX    A,@DPTR
00D4 FF                MOV     R7,A
00D5 EF                MOV     A,R7
00D6 4408              ORL     A,#08H
00D8 FF                MOV     R7,A
00D9 904322            MOV     DPTR,#04322H
00DC EF                MOV     A,R7
00DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 290
00DE 9046EC            MOV     DPTR,#046ECH
00E1 E0                MOVX    A,@DPTR
00E2 FF                MOV     R7,A
00E3 EF                MOV     A,R7
00E4 C3                CLR     C
00E5 9405              SUBB    A,#05H
00E7 5006              JNC     ?C0016
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
00E9 904689            MOV     DPTR,#04689H
00EC 743A              MOV     A,#03AH
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
00EF         ?C0016:
                                           ; SOURCE LINE # 297
00EF 904800            MOV     DPTR,#04800H
00F2 7431              MOV     A,#031H
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
00F5 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 301
00F8 904800            MOV     DPTR,#04800H
00FB 74B1              MOV     A,#0B1H
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 304
00FE 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 307
0101 7B00              MOV     R3,#00H
0103 7A43              MOV     R2,#043H
0105 79A0              MOV     R1,#0A0H
0107 C003              PUSH    AR3
0109 C002              PUSH    AR2
010B C001              PUSH    AR1
C51 COMPILER V9.51   CYFITTER_CFG                                                          06/01/2025 14:38:28 PAGE 14  

010D 7B00              MOV     R3,#00H
010F 7A43              MOV     R2,#043H
0111 79B0              MOV     R1,#0B0H
0113 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0116 120000      E     LCALL   ?C?PSTXDATA
0119 D001              POP     AR1
011B D002              POP     AR2
011D D003              POP     AR3
011F 7F0E              MOV     R7,#0EH
0121 7E00              MOV     R6,#00H
0123 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 308
0126 9043B0            MOV     DPTR,#043B0H
0129 E0                MOVX    A,@DPTR
012A FF                MOV     R7,A
012B EF                MOV     A,R7
012C 54FD              ANL     A,#0FDH
012E FF                MOV     R7,A
012F EF                MOV     A,R7
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
0131 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    669    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
